{
  "name": "LINE Bot - Fixed Version",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "webhook",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-line",
      "name": "Webhook LINE Bot",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [250, 400],
      "webhookId": "line-webhook-main"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.events[0].type}}",
              "operation": "equals",
              "value2": "message"
            }
          ]
        }
      },
      "id": "if-message",
      "name": "‡πÄ‡∏ä‡πá‡∏Ñ Message Event",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [450, 300]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.events[0].type}}",
              "operation": "equals",
              "value2": "follow"
            }
          ]
        }
      },
      "id": "if-follow",
      "name": "‡πÄ‡∏ä‡πá‡∏Ñ Follow Event",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [450, 500]
    },
    {
      "parameters": {
        "jsCode": "const event = $input.item.json.events[0];\nconst userId = event.source.userId;\nconst messageText = event.message.text || '';\nconst replyToken = event.replyToken;\nconst timestamp = new Date().toLocaleString('th-TH', { \n  timeZone: 'Asia/Bangkok',\n  day: '2-digit',\n  month: '2-digit',\n  year: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit',\n  second: '2-digit'\n});\n\nconst requestId = 'REQ-' + Date.now();\n\nlet action = 'show_menu';\nif (messageText.includes('‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°') || messageText.includes('‡∏ã‡πà‡∏≠‡∏°')) {\n  action = 'repair';\n} else if (messageText.includes('‡πÄ‡∏°‡∏ô‡∏π')) {\n  action = 'show_menu';\n}\n\nreturn { \n  json: {\n    userId,\n    messageText,\n    replyToken,\n    timestamp,\n    requestId,\n    action\n  }\n};"
      },
      "id": "process-message",
      "name": "‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [650, 200]
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "17iHlGJ2XOVhVGpv7aJuuAbITXqXp-d_4V3JBRgKNAz4",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏´‡∏ï‡∏∏‡πÑ‡∏ü‡∏ü‡πâ‡∏≤‡∏Ç‡∏±‡∏î‡∏Ç‡πâ‡∏≠‡∏á",
          "mode": "name"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "‡∏õ‡∏£‡∏∞‡∏ó‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤": "={{$json.timestamp}}",
            "‡πÄ‡∏•‡∏Ç‡∏£‡∏±‡∏ö‡πÅ‡∏à‡πâ‡∏á": "={{$json.requestId}}",
            "LINE User ID": "={{$json.userId}}",
            "Line name": "={{$json.userId}}",
            "‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏": "={{$json.messageText}}",
            "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞": "‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£",
            "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô": "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô (‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö)",
            "Form Type": "CHAT"
          }
        },
        "options": {}
      },
      "id": "save-sheets",
      "name": "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á Google Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [850, 100],
      "credentials": {
        "googleApi": {
          "id": "OZw8cze8OnNNXIEG",
          "name": "Google Service Account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "-4745179416",
        "text": "=üîî *‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÉ‡∏´‡∏°‡πà*\n\nüìã ‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà: {{$json.requestId}}\nüë§ ‡∏ú‡∏π‡πâ‡πÅ‡∏à‡πâ‡∏á: {{$json.userId}}\nüìù ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î: {{$json.messageText}}\n‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤: {{$json.timestamp}}\nüìä ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£",
        "additionalFields": {
          "parse_mode": "Markdown"
        }
      },
      "id": "telegram-notify",
      "name": "‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô Telegram",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [850, 300],
      "credentials": {
        "telegramApi": {
          "id": "nCuFhOsUCAQGI85F",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const data = $input.item.json;\n\nconst flexMessage = {\n  type: \"flex\",\n  altText: `‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà ${data.requestId} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`,\n  contents: {\n    type: \"bubble\",\n    header: {\n      type: \"box\",\n      layout: \"vertical\",\n      contents: [\n        {\n          type: \"text\",\n          text: \"‚úÖ ‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à\",\n          weight: \"bold\",\n          size: \"lg\",\n          color: \"#ffffff\",\n          align: \"center\"\n        }\n      ],\n      backgroundColor: \"#10b981\",\n      paddingAll: \"20px\"\n    },\n    body: {\n      type: \"box\",\n      layout: \"vertical\",\n      contents: [\n        {\n          type: \"box\",\n          layout: \"horizontal\",\n          contents: [\n            {\n              type: \"text\",\n              text: \"üìã ‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà:\",\n              size: \"sm\",\n              color: \"#64748b\",\n              flex: 2\n            },\n            {\n              type: \"text\",\n              text: data.requestId,\n              size: \"sm\",\n              color: \"#0f172a\",\n              weight: \"bold\",\n              flex: 3,\n              wrap: true\n            }\n          ]\n        },\n        {\n          type: \"box\",\n          layout: \"horizontal\",\n          contents: [\n            {\n              type: \"text\",\n              text: \"‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤:\",\n              size: \"sm\",\n              color: \"#64748b\",\n              flex: 2\n            },\n            {\n              type: \"text\",\n              text: data.timestamp,\n              size: \"sm\",\n              color: \"#0f172a\",\n              flex: 3,\n              wrap: true\n            }\n          ],\n          margin: \"md\"\n        },\n        {\n          type: \"separator\",\n          margin: \"lg\"\n        },\n        {\n          type: \"text\",\n          text: \"‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡πÇ‡∏î‡∏¢‡πÄ‡∏£‡πá‡∏ß‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î\",\n          size: \"xs\",\n          color: \"#64748b\",\n          wrap: true,\n          margin: \"lg\"\n        }\n      ],\n      paddingAll: \"20px\"\n    },\n    footer: {\n      type: \"box\",\n      layout: \"vertical\",\n      contents: [\n        {\n          type: \"button\",\n          style: \"link\",\n          action: {\n            type: \"message\",\n            label: \"üìä ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞\",\n            text: \"‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ã‡πà‡∏≠‡∏°\"\n          }\n        }\n      ],\n      paddingAll: \"20px\",\n      backgroundColor: \"#f0fdf4\"\n    }\n  }\n};\n\nreturn { json: { ...data, flexMessage } };"
      },
      "id": "create-flex",
      "name": "‡∏™‡∏£‡πâ‡∏≤‡∏á Flex Message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1050, 200]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.line.me/v2/bot/message/reply",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"replyToken\": \"{{$json.replyToken}}\",\n  \"messages\": [{{$json.flexMessage}}]\n}",
        "options": {}
      },
      "id": "line-reply",
      "name": "‡∏™‡πà‡∏á Flex Message ‡∏Å‡∏•‡∏±‡∏ö LINE",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1250, 200],
      "credentials": {
        "httpHeaderAuth": {
          "id": "LINE_CREDENTIALS_ID",
          "name": "LINE Bot Token"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const event = $input.item.json.events[0];\nconst userId = event.source.userId;\nconst replyToken = event.replyToken;\n\nconst flexMessage = {\n  type: \"flex\",\n  altText: \"‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°‡πÑ‡∏ü‡∏ü‡πâ‡∏≤\",\n  contents: {\n    type: \"bubble\",\n    header: {\n      type: \"box\",\n      layout: \"vertical\",\n      contents: [\n        {\n          type: \"text\",\n          text: \"‚ö° ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö\",\n          weight: \"bold\",\n          size: \"xl\",\n          color: \"#ffffff\",\n          align: \"center\"\n        }\n      ],\n      backgroundColor: \"#f59e0b\",\n      paddingAll: \"20px\"\n    },\n    body: {\n      type: \"box\",\n      layout: \"vertical\",\n      contents: [\n        {\n          type: \"text\",\n          text: \"üí°\",\n          size: \"5xl\",\n          align: \"center\"\n        },\n        {\n          type: \"text\",\n          text: \"‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤ ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°‡πÑ‡∏ü‡∏ü‡πâ‡∏≤‡∏™‡∏≤‡∏ò‡∏≤‡∏£‡∏ì‡∏∞‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ\",\n          size: \"sm\",\n          color: \"#475569\",\n          wrap: true,\n          margin: \"lg\"\n        }\n      ],\n      paddingAll: \"20px\"\n    },\n    footer: {\n      type: \"box\",\n      layout: \"vertical\",\n      contents: [\n        {\n          type: \"button\",\n          style: \"primary\",\n          action: {\n            type: \"message\",\n            label: \"üîß ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô\",\n            text: \"‡πÄ‡∏°‡∏ô‡∏π\"\n          },\n          color: \"#f59e0b\"\n        }\n      ],\n      paddingAll: \"20px\"\n    }\n  }\n};\n\nreturn { json: { userId, replyToken, flexMessage } };"
      },
      "id": "welcome-flex",
      "name": "‡∏™‡∏£‡πâ‡∏≤‡∏á Welcome Message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [650, 500]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.line.me/v2/bot/message/reply",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"replyToken\": \"{{$json.replyToken}}\",\n  \"messages\": [{{$json.flexMessage}}]\n}",
        "options": {}
      },
      "id": "line-welcome",
      "name": "‡∏™‡πà‡∏á Welcome Message",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [850, 500],
      "credentials": {
        "httpHeaderAuth": {
          "id": "LINE_CREDENTIALS_ID",
          "name": "LINE Bot Token"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\"status\": \"success\"}",
        "options": {
          "responseCode": 200
        }
      },
      "id": "webhook-response",
      "name": "Response ‡∏Å‡∏•‡∏±‡∏ö LINE",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1450, 350]
    }
  ],
  "connections": {
    "Webhook LINE Bot": {
      "main": [
        [
          {
            "node": "‡πÄ‡∏ä‡πá‡∏Ñ Message Event",
            "type": "main",
            "index": 0
          },
          {
            "node": "‡πÄ‡∏ä‡πá‡∏Ñ Follow Event",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‡πÄ‡∏ä‡πá‡∏Ñ Message Event": {
      "main": [
        [
          {
            "node": "‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‡πÄ‡∏ä‡πá‡∏Ñ Follow Event": {
      "main": [
        [
          {
            "node": "‡∏™‡∏£‡πâ‡∏≤‡∏á Welcome Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°": {
      "main": [
        [
          {
            "node": "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á Google Sheets",
            "type": "main",
            "index": 0
          },
          {
            "node": "‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á Google Sheets": {
      "main": [
        [
          {
            "node": "‡∏™‡∏£‡πâ‡∏≤‡∏á Flex Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô Telegram": {
      "main": [
        [
          {
            "node": "Response ‡∏Å‡∏•‡∏±‡∏ö LINE",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‡∏™‡∏£‡πâ‡∏≤‡∏á Flex Message": {
      "main": [
        [
          {
            "node": "‡∏™‡πà‡∏á Flex Message ‡∏Å‡∏•‡∏±‡∏ö LINE",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‡∏™‡πà‡∏á Flex Message ‡∏Å‡∏•‡∏±‡∏ö LINE": {
      "main": [
        [
          {
            "node": "Response ‡∏Å‡∏•‡∏±‡∏ö LINE",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‡∏™‡∏£‡πâ‡∏≤‡∏á Welcome Message": {
      "main": [
        [
          {
            "node": "‡∏™‡πà‡∏á Welcome Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‡∏™‡πà‡∏á Welcome Message": {
      "main": [
        [
          {
            "node": "Response ‡∏Å‡∏•‡∏±‡∏ö LINE",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "active": false,
  "tags": []
}
